repeat wait() until game:IsLoaded()
game:GetService("StarterGui"):SetCore("SendNotification",{
	Title = "Perfectus Hub", -- Required
	Text = "Loading Hub", -- Required
	Icon = "rbxassetid://14887567417" -- Optional
})
wait(0.1)

local perfectushub = loadstring(game:HttpGet(('https://raw.githubusercontent.com/Binintrozza/GUI-SCRIPT/main/GUI_NEW.lua')))()
if game.PlaceId == 14433762945 then
    local MarketplaceService = game:GetService("MarketplaceService")
local placeName = MarketplaceService:GetProductInfo(game.PlaceId).Name
    local Window = perfectushub:MakeWindow({Name = "Perfectus Hub      "..placeName, HidePremium = false, SaveConfig = true, IntroEnabled = true, IntroText = "Perfectus Hub", IntroIcon = "rbxassetid://14887567417",Intro ="rbxassetid://14887567417" , ConfigFolder = "Perfectus hub"})
    local Main = Window:MakeTab({
        Name = "Main",
        Icon = "rbxassetid://14887567417",
        PremiumOnly = false
    }) 
    local HS = game:GetService("HttpService")
local RS = game:GetService("ReplicatedStorage")
local WS = game:GetService("Workspace")
local P = game:GetService("Players")
local VU = game:GetService("VirtualUser")
local VIM = game:GetService("VirtualInputManager")
local RunS = game:GetService("RunService")
local TS = game:GetService("TweenService")
local httpRequest = (syn and syn.request) or http_request or request or (http and http.request) or nil
local player = P.LocalPlayer
local originalCameraZoomDistance = player.CameraMaxZoomDistance
local character = player.Character
local BINDABLE = RS.Bindable
local REMOTE = RS.Remote
local clickmodule = require(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.MainGuiHandler.HUD.BottomButtons.Clicker)
local IGNORED_WORLDS = {"Raid","Tower","Champion City"}
local worldData = require(RS.ModuleScripts.Config.WorldData)
--hatch 
local mobs = {}
_G.disabled = false
function getTarget(name, world)
		local enemies = WS.Worlds[world].Enemies
		for _, enemy in ipairs(enemies:GetChildren()) do
			if  enemy.Name == name and enemy:FindFirstChild("HumanoidRootPart") then
				return enemy
			end
		end
	end

    function getMobs()
        for _, enemy in ipairs(WS.Worlds[player.World.Value].Enemies:GetChildren()) do
            if not table.find(mobs, enemy.Name) then
                table.insert(mobs, enemy.Name)
            end
        end

        return mobs
    end
	function retreat()
        VIM:SendKeyEvent(true,"R",false,game)
    end
    	function cagans()
        VIM:SendKeyEvent(true,"E",false,game)
    end
	function init()
		getMobs()
	end
	init()
task.spawn(function()
	while not _G.disabled do
		if autofarm1 and selectedMob then
			local cWorld = player.World.Value
			local target = getTarget(selectedMob,cWorld)
			local enemySpawns = WS.Worlds[cWorld].Enemies
			local enemyModels = WS.Worlds[cWorld].Enemies:GetChildren()

			if target ~= nil and target:FindFirstChild("Attackers") then
				local enemySpawn

				for _, spawn in ipairs(enemySpawns:GetChildren()) do
					if spawn == target then
						enemySpawn = spawn

						break
					end
				end

				if enemySpawn ~= nil then
					if Teleport then
					character.HumanoidRootPart.CFrame = target.HumanoidRootPart.CFrame
					end
					repeat
						if target ~= nil and target:WaitForChild("Attackers") and table.find(enemyModels, target)  and #target:WaitForChild("Attackers"):GetChildren() == 0 then
							BINDABLE.Pets.SendAllPets:Fire(target, true)
						end

						task.wait()
					until _G.disabled
					or player.World.Value ~= cWorld
					or target == nil
					or target:FindFirstChild("Attackers") == nil
					or not autofarm1

					retreat()
				end
			end

			table.clear(enemyModels)
			ememyModels = nil
		elseif autofarm1 and not selectedMob then
			print ("Select mob first")
			task.wait(5)
		end

		task.wait(1)
	end
	Teleport = nil
	autofarm1 = nil
	selectedMob = nil
end)
        --coin/drops
        task.spawn(function()
            while not _G.disabled do
                if autoCollect then
                    for _, v in ipairs(WS.Effects:GetDescendants()) do
                        if v.Name == "CurrencyDrop" then
                            v.CFrame = character.HumanoidRootPart.CFrame
                        end
						if v.Name == "ImageDrop" then
                            v.CFrame = character.HumanoidRootPart.CFrame
                        end
                    end
                end

                task.wait()
            end

            autoCollect = nil
        end)
		task.spawn(function()
            while not _G.disabled do
                if autoclick then
					clickmodule:AttemptClick()
                end

                task.wait()
            end

            autoclick = nil
        end)
		task.spawn(function()
            while not _G.disabled do
                if autosummon then
					REMOTE.Orbs.OpenOrbs:FireServer(eggchecker,1)
                end

                task.wait()
            end
			eggchecker = nil
            autosummon = nil
        end)







Main:AddSection({
    Name = " Auto Farm"
})

local Dropdown = Main:AddDropdown({
    Name = "Select Enemy To Farm",
    Default = false,
    Save = true,
    Flag = "Select Enemy To Farm",
    Options = mobs,
    Callback = function(value)
        selectedMob = value
    end
})

 Main:AddButton({
    Name = "Refresh Enemy List",
    Callback = function()
        selectedMob = nil
        mobs = {}
        mobs = getMobs()
        Dropdown:Refresh(mobs,true)
        Dropdown:Set(false)
        Dropdown2:Refresh(mobs,true)
        Dropdown2:Set(false)
        Dropdown3:Refresh(mobs,true)
        Dropdown3:Set(false)
    end
})
Main:AddToggle({
    Name = "Auto Farm Selected Mob",
    Default = false,
    Save = true,
    Flag = "AUTO FARM tp Mob Select",
    Callback = function(toggleState)
        autofarm1=toggleState
    end
})
Main:AddToggle({
    Name = "Teleport (For not Farm in range)",
    Default = false,
    Save = true,
    Flag = "AUTO FARM tp Mob Select",
    Callback = function(toggleState)
        Teleport=toggleState
    end
})
Main:AddSection({
    Name = "Features"
})
Main:AddToggle({
    Name = "Auto Click",
    Default = false,
    Save = true,
    Flag = "AUTO CLICK",
    Callback = function(toggleState)
        autoclick=toggleState
    end
})
Main:AddToggle({
    Name = "Auto Collect",
    Default = false,
    Save = true,
    Flag = "AUTO Collect",
    Callback = function(toggleState)
        autoCollect=toggleState
    end
})
Main:AddSection({		
    Name = "Spirit"
})
Main:AddToggle({
    Name = "Auto Spirit Farm",
    Callback = function(Value)
     at = Value
        while at do task.wait(0.1)
local args = {[1] = "TalentToken",[2] = 1}game:GetService("ReplicatedStorage").Remote.Drops.Items:FireServer(unpack(args))
game:GetService("ReplicatedStorage").Remote.Drops.CaughtSpirit:FireServer()
		end
    end
})
local hatch = Window:MakeTab({
    Name = "Open Orbs",
    Icon = "rbxassetid://14887567417",
    PremiumOnly = false
 })
--[[["Dragon Orb"] = game.Workspace.Worlds.DBZ.DBZOrb,
	["Pirate Orb"] = game.Workspace.Worlds.OnePiece.OnePieceOrb,
	["Hero Orb"] =  game.Workspace.Worlds.MHA.NMHAOrb,
	["Ninja Orb"] =  game.Workspace.Worlds.Naruto.NarutoOrb,
	["Strange Orb"] =  game.Workspace.Worlds.Jojo.BizarreOrb,
	["Demon Orb"] =  game.Workspace.Worlds.DemonSlayer.DemonOrb,]]--

hatch:AddToggle({
    Name = "Auto Hatch One Piece Orb",
    Default = false,
    Save = true,
    Flag = "Auto Hatch Orb Select",
    Callback = function(val)
        autosummon = val
        while autosummon do wait(0.1)
local args = {[1] = workspace.Worlds.OnePiece.OnePieceOrb,
[2] = 1
}
game:GetService("ReplicatedStorage").Remote.Orbs.OpenOrbs:FireServer(unpack(args))
        end
    end
})
hatch:AddToggle({
    Name = "Auto Hatch DBZ Orb",
    Default = false,
    Save = true,
    Flag = "Auto Hatch Orb Select",
    Callback = function(val)
        autosummon2 = val
        while autosummon2 do wait(0.1)
local args = {[1] = Workspace.Worlds.DBZ.DBZOrb,
[2] = 1
}
game:GetService("ReplicatedStorage").Remote.Orbs.OpenOrbs:FireServer(unpack(args))
        end
    end
})
hatch:AddToggle({
    Name = "Auto Hatch MHA Orb",
    Default = false,
    Save = true,
    Flag = "Auto Hatch Orb Select",
    Callback = function(val)
        autosummon3 = val
        while autosummon3 do wait(0.1)
local args = {[1] = Workspace.Worlds.MHA.MHAOrb,
[2] = 1
}
game:GetService("ReplicatedStorage").Remote.Orbs.OpenOrbs:FireServer(unpack(args))
        end
    end
})
hatch:AddToggle({
    Name = "Auto Hatch Demon Slayer Orb",
    Default = false,
    Save = true,
    Flag = "Auto Hatch Orb Select",
    Callback = function(val)
        autosummon4 = val
        while autosummon4 do wait(0.1)
local args = {[1] = Workspace.Worlds.DemonSlayer.DemonOrb,
[2] = 1
}
game:GetService("ReplicatedStorage").Remote.Orbs.OpenOrbs:FireServer(unpack(args))
        end
    end
})
hatch:AddToggle({
    Name = "Auto Hatch Naruto Orb",
    Default = false,
    Save = true,
    Flag = "Auto Hatch Orb Select",
    Callback = function(val)
        autosummon5 = val
        while autosummon5 do wait(0.1)
local args = {[1] = Workspace.Worlds.Naruto.NarutoOrb,
[2] = 1
}
game:GetService("ReplicatedStorage").Remote.Orbs.OpenOrbs:FireServer(unpack(args))
        end
    end
})
hatch:AddToggle({
    Name = "Auto Hatch Jojo Orb",
    Default = false,
    Save = true,
    Flag = "Auto Hatch Orb Select",
    Callback = function(val)
        autosummon8 = val
        while autosummon8 do wait(0.1)
local args = {[1] = Workspace.Worlds.JJK.BizarreOrb,
[2] = 1
}
game:GetService("ReplicatedStorage").Remote.Orbs.OpenOrbs:FireServer(unpack(args))
        end
    end
})
hatch:AddToggle({
    Name = "Auto Hatch One Piece Orb Triple",
    Default = false,
    Save = true,
    Flag = "Auto Hatch Orb Select",
    Callback = function(val)
        autosummont = val
        while autosummont do wait(0.1)
local args = {[1] = workspace.Worlds.OnePiece.OnePieceOrb,
[2] = 3
}
game:GetService("ReplicatedStorage").Remote.Orbs.OpenOrbs:FireServer(unpack(args))
        end
    end
})
hatch:AddToggle({
    Name = "Auto Hatch DBZ Orb Triple",
    Default = false,
    Save = true,
    Flag = "Auto Hatch Orb Select",
    Callback = function(val)
        autosummont2 = val
        while autosummont2 do wait(0.1)
local args = {[1] = Workspace.Worlds.DBZ.DBZOrb,
[2] = 3
}
game:GetService("ReplicatedStorage").Remote.Orbs.OpenOrbs:FireServer(unpack(args))
        end
    end
})
hatch:AddToggle({
    Name = "Auto Hatch MHA Orb Triple",
    Default = false,
    Save = true,
    Flag = "Auto Hatch Orb Select",
    Callback = function(val)
        autosummont3 = val
        while autosummont3 do wait(0.1)
local args = {[1] = Workspace.Worlds.MHA.MHAOrb,
[2] = 3
}
game:GetService("ReplicatedStorage").Remote.Orbs.OpenOrbs:FireServer(unpack(args))
        end
    end
})
hatch:AddToggle({
    Name = "Auto Hatch Demon Slayer Orb Triple",
    Default = false,
    Save = true,
    Flag = "Auto Hatch Orb Select Tripl",
    Callback = function(val)
        autosummont4 = val
        while autosummont4 do wait(0.1)
local args = {[1] = Workspace.Worlds.DemonSlayer.DemonOrb,
[2] = 3
}
game:GetService("ReplicatedStorage").Remote.Orbs.OpenOrbs:FireServer(unpack(args))
        end
    end
})
hatch:AddToggle({
    Name = "Auto Hatch Naruto Orb Triple",
    Default = false,
    Save = true,
    Flag = "Auto Hatch Orb Select",
    Callback = function(val)
        autosummont5 = val
        while autosummont5 do wait(0.1)
local args = {[1] = Workspace.Worlds.Naruto.NarutoOrb,
[2] = 3
}
game:GetService("ReplicatedStorage").Remote.Orbs.OpenOrbs:FireServer(unpack(args))
        end
    end
})
hatch:AddToggle({
    Name = "Auto Hatch Jojo Orb Triple",
    Default = false,
    Save = true,
    Flag = "Auto Hatch Orb Select",
    Callback = function(val)
        autosummont2 = val
        while autosummont2 do wait(0.1)
local args = {[1] = Workspace.Worlds.JJK.BizarreOrb,
[2] = 3
}
game:GetService("ReplicatedStorage").Remote.Orbs.OpenOrbs:FireServer(unpack(args))
        end
    end
})

local tw = Window:MakeTab({
    Name = "Tower",
    Icon = "rbxassetid://14887567417",
    PremiumOnly = false
 }) 

function autoattack()
    local button = game:service'VirtualInputManager'
    local X, Y = 682, 376
    
    button:SendMouseButtonEvent(X, Y, 0, true, game, 1)
    button:SendMouseButtonEvent(X, Y, 0, false, game, 1)
    wait(3)
end
local function getClosestMob2()
    local dist, thing = math.huge
    for i, v in next, game:GetService("Workspace").Worlds.Tower.Enemies:GetDescendants() do
        if v.Name == "HumanoidRootPart" then
            local mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude
            if mag < dist then
                dist = mag
                thing = v
            end
        end
    end
    if thing then
        return thing
    else
        return nil
    end
end
tw:AddToggle({
    Name = "Auto Tween Mob",
    Default = false,
    Save = true,
    Callback = function(Value)
        bas = Value
        while bas do
            task.wait()
            repeat
                task.wait()
            until game.Players.LocalPlayer.Character ~= nil
            local mobas = getClosestMob2()
            if mobas then
                local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
                local tween = game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, tweenInfo, {CFrame = mobas.CFrame * CFrame.new(0,0,2)})
                tween:Play()
            end
        end
    end,
})

local dl1 
    tw:AddSlider({
    Name = "Auto Start Delay",
    Min = 0,
    Max = 500,
    Default = 50,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "/s",
    Callback = function(dly1)
    dl1 = dly1
    end  
})

tw:AddToggle({
    Name = "Auto Start Tower",
    Default = false,
    Save = true,
    Callback = function(Value)
        sttw = Value
        while sttw do
game:GetService("ReplicatedStorage").Remote.Tower.StartTower:FireServer()
wait(dl1)
        end
    end,
})

local function getClosestMob()
    local dist, thing = math.huge
    for i, v in next, game:GetService("Workspace").Worlds.Tower:GetDescendants() do
        if v.Name == "ChestSpawn" then
            local mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude
            if mag < dist then
                dist = mag
                thing = v
            end
        end
    end
    if thing then
        return thing
    else
        return nil
    end
end
tw:AddToggle({
    Name = "Auto Collect Chest",
    Default = false,
    Save = true,
    Callback = function(Value)
        ba = Value
        while ba do
        cagans()
            task.wait()
            repeat
                task.wait()
            until game.Players.LocalPlayer.Character ~= nil
            local moba = getClosestMob()
            if moba then
                local tweenInfo = TweenInfo.new(3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
                local tween = game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, tweenInfo, {CFrame = moba.CFrame * CFrame.new(0,0,2)})
                tween:Play()
            end
        end
    end,
})

local p = game.Players.LocalPlayer.PlayerGui.MainGui.Windows

local ggui = Window:MakeTab({
    Name = "GUI",
    Icon = "rbxassetid://14887567417",
    PremiumOnly = false
 }) 
 ggui:AddButton({
    Name = "Close All Gui",
    Default = false,
    Save = true,
    Callback = function(val)
p.SecretMachine.Visible = false
p.PassiveMachine.Visible = false
p.TierMachine.Visible = false
p.TalentMachine.Visible = false
p.EssenceMachine.Visible = false
    end
})
ggui:AddButton({
    Name = "Open Secret Machine",
    Default = false,
    Save = true,
    Callback = function(val)
p.SecretMachine.Visible = true
    end
})
ggui:AddButton({
    Name = "Open Passive Machine",
    Default = false,
    Save = true,
    Callback = function(val)
p.PassiveMachine.Visible = true
    end
})
ggui:AddButton({
    Name = "Open Tier Machine",
    Default = false,
    Save = true,
    Callback = function(val)
p.TierMachine.Visible = true
    end
})
ggui:AddButton({
    Name = "Open Talent Machine",
    Default = false,
    Save = true,
    Callback = function(val)
p.TalentMachine.Visible = true
    end
})
ggui:AddButton({
    Name = "Open Essence Machine",
    Default = false,
    Save = true,
    Callback = function(val)
p.EssenceMachine.Visible = true
    end
})
p.TalentMachine.Visible = false
local displayNameToWorldName = {}
local ttp = Window:MakeTab({
    Name = "Teleport",
    Icon = "rbxassetid://14887567417",
    PremiumOnly = false
 }) 
 ttp:AddSection({
    Name = "TELEPORT : "

}) 
local tab = {}
for worldName, info in pairs(worldData) do
    if not table.find(IGNORED_WORLDS, worldName) then
        displayNameToWorldName[info.DisplayName] = worldName
        table.insert(tab, info)
    end
end

table.sort(tab, function(a, b)
    return a.PurchasePrice < b.PurchasePrice
end)

for _, info in ipairs(tab) do
    ttp:AddButton({
        Name = info.DisplayName,
        Default = false,
        Callback = function()
            local world = displayNameToWorldName[info.DisplayName]
            REMOTE.Player.Teleport:FireServer(world)
        end
    })
end

local Player = Window:MakeTab({
    Name = "Local Player",
    Icon = "rbxassetid://14887567417",
    PremiumOnly = false
})
Player:AddParagraph("Local Player ","Speed ")
Player:AddSlider({
    Name = "Walkspeed",
    Min = 0,
    Max = 500,
    Default = 50,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "Speeds",
    Callback = function(s)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s

    end  
})
Player:AddSlider({
    Name = "JumpPower",
    Min = 0,
    Max = 500,
    Default = false,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "Powers",
    Callback = function(s)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = s
    end  
})
local misc = Window:MakeTab({
    Name = "Misc",
    Icon = "rbxassetid://14887567417",
    PremiumOnly = false
 })
misc:AddSection({
    Name = "Server Misc"
})
misc:AddParagraph("Anti Afk NOTIFICATION"," Script Will Auto anti afk when you excute  !")
 function antiAFK()
    player.Idled:Connect(function()
        VU:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
        task.wait(1)
        VU:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    end)
end
    antiAFK()
function CopyjobID()
    local JobId = game.JobId

    setclipboard(JobId)
end
local whitescreen = false
misc:AddToggle({
    Name = "White Screen ",
    Default = false,
    Callback = function (tooglestate)
        whitescreen = tooglestate
if whitescreen == true then
        game:GetService("RunService"):Set3dRenderingEnabled(false)
        elseif whitescreen == false  then
            game:GetService("RunService"):Set3dRenderingEnabled(true)

    end
end

})

misc:AddButton({
    Name = "Hop Sever ",
    Default = false,
    Callback = function()
        local Player = game.Players.LocalPlayer    
        local Http = game:GetService("HttpService")
        local TPS = game:GetService("TeleportService")
        local Api = "https://games.roblox.com/v1/games/"

        local _place,_id = game.PlaceId, game.JobId
        local _servers = Api.._place.."/servers/Public?sortOrder=Asc&limit=10"
        function ListServers(cursor)
           local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
           return Http:JSONDecode(Raw)
        end

        time_to_wait = 3 
        while wait(time_to_wait) do
           Player.Character.HumanoidRootPart.Anchored = true
           local Servers = ListServers()
           local Server = Servers.data[math.random(1,#Servers.data)]
           TPS:TeleportToPlaceInstance(_place, Server.id, Player)
        end
            perfectushub:MakeNotification({
                Name = "success Copy",
                Content = "Copy Your JobID",
                Image = "rbxassetid://14887567417",
                Time = 5
            })
   end
})
misc:AddButton({
    Name = "Copy JobID Sever",
    Default = false,
    Callback = function()
            CopyjobID()
            perfectushub:MakeNotification({
                Name = "success Copy",
                Content = "Copy Your JobID",
                Image = "rbxassetid://14887567417",
                Time = 5
            })
   end
})
misc:AddTextbox({
    Name = "Type Your JobID And Enter",
    Default = false,
    TextDisappear = true,
    Callback = function(vew)
        Players = game:GetService("Players")

        PlaceId, JobId = game.PlaceId, vew  
TeleportService = game:GetService("TeleportService")
TeleportService:TeleportToPlaceInstance(PlaceId, JobId, Players.LocalPlayer)
    end	  
})
 misc:AddSection({
    Name = "Save + Load Config"
})
misc:AddButton({
    Name = "Save ConFig !",
    Callback = function()
     perfectushub:SaveCfg("Perfectus hub")
            perfectushub:MakeNotification({
                Name = "Success Save ConFig",
                Content = "If you want use this config just load it",
                Image = "rbxassetid://14887567417",
                Time = 5
            })
      end    
})
misc:AddButton({
    Name = "Load ConFig !",
    Callback = function()
        perfectushub:Init()
      end    
})
local Credit = Window:MakeTab({
	Name = "DISCORD",
	Icon = "rbxassetid://14887567417",
	PremiumOnly = false
	})
	Credit:AddParagraph("Click To Copy Link Discord COMMUNITY To clipboard ","WHEN YOU COPY WILL HAVE A NOTIFICATION ")
	Credit:AddButton({
		Name = " COPY SERVER DISCORD LINK ",
		Callback = function()
			local serverLink = "https://discord.gg/RVnjYRWNA9" -- Thay xxxxxxxxxx bằng mã link server Discord của bạn
			setclipboard(serverLink) 
			local success = true
			if success then
				perfectushub:MakeNotification({
					Name = "Copy To clipboard",
					Content = "Let Join DISCORD SEVER ( Perfectus Hub | COMMUNITY )",
					Image = "rbxassetid://14887567417",
					Time = 5
				})
			end
		end
	})   
else

perfectushub:MakeNotification({
Name = "DONT SUPPORT THIS GAME",
Content = "Check STATUS ON DISCORD SEVER ( Perfectus Hub | COMMUNITY )",
Image = "rbxassetid://14887567417",
Time = 10
})


perfectushub:Init()
end

wait(1)

game:GetService("StarterGui"):SetCore("SendNotification",{
	Title = "Perfectus Hub", -- Required
	Text = "Loaded", -- Required
	Icon = "rbxassetid://14887567417" -- Optional
})
