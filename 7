repeat wait() until game:IsLoaded()

game:GetService("StarterGui"):SetCore("SendNotification",{
	Title = "Perfectus Hub", -- Required
	Text = "Loading Hub", -- Required
	Icon = "rbxassetid://14887567417" -- Optional 
})

wait(0.1)

getgenv().AutoSaveSettings = {
    AutoBestDumbell = false,
    AutoFuse = false,
}

local mainimg = "rbxassetid://7539983773"
local openimg = "rbxassetid://9194077649"
local guiimg = "rbxassetid://4458888115"
local dungeonimg = "rbxassetid://6730262023"
local teleportimg = "rbxassetid://6723742952"
local universalimg = "rbxassetid://10885655986"
local perfectuslogo = "rbxassetid://14887567417"
local farmingimg = "rbxassetid://7485051715"
local statsimg = "rbxassetid://14377123173"
local settingimg = "rbxassetid://11446835336"
local discordimg = "rbxassetid://1461403871"

local client = game.Players.LocalPlayer

local perfectushub = loadstring(game:HttpGet(('https://raw.githubusercontent.com/Binintrozza/GUI-SCRIPT/main/GUI_NEW.lua')))()

local MarketplaceService = game:GetService("MarketplaceService")

local placeName = MarketplaceService:GetProductInfo(game.PlaceId).Name
    


    local Window = perfectushub:MakeWindow({Name = "Perfectus Hub      "..placeName, HidePremium = false, SaveConfig = true, IntroEnabled = true, IntroText = "Perfectus Hub", IntroIcon = "rbxassetid://14887567417",Intro ="rbxassetid://14887567417" , ConfigFolder = "perfectushub"})
    

        local Welcome = Window:MakeTab({
        Name = "Welcome",
        Icon = statsimg,
        PremiumOnly = false
    }) 

    local Main = Window:MakeTab({
        Name = "Main",
        Icon = mainimg,
        PremiumOnly = false
    }) 
       
        local Farming = Window:MakeTab({
        Name = "Farming",
        Icon = farmingimg,
        PremiumOnly = false
    }) 

local HS = game:GetService("HttpService")
local RS = game:GetService("ReplicatedStorage")
local WS = game:GetService("Workspace")
local P = game:GetService("Players")
local VU = game:GetService("VirtualUser")
local VIM = game:GetService("VirtualInputManager")
local RunS = game:GetService("RunService")
local TS = game:GetService("TweenService")
local httpRequest = (syn and syn.request) or http_request or request or (http and http.request) or nil
local player = P.LocalPlayer
local originalCameraZoomDistance = player.CameraMaxZoomDistance
local character = player.Character
local stats = player.GameStats
local crwl = player.GameStats.CurrentWorld

    Welcome:AddLabel("Welcome "..game.Players.LocalPlayer.DisplayName)
    
    local Time = Welcome:AddLabel("Server Time")
    function UpdateTime()
    local GameTime = math.floor(workspace.DistributedGameTime+0.5)
    local Hour = math.floor(GameTime/(60^2))%24
    local Minute = math.floor(GameTime/(60^1))%60
    local Second = math.floor(GameTime/(60^0))%60
    Time:Set("Game Time : Hours : "..Hour.." Minutes : "..Minute.." Seconds : "..Second)
    end
    
    spawn(function()
    while task.wait() do
    pcall(function()
    UpdateTime()
    end)
    end
    end)
    
    Client = Welcome:AddLabel("Client")
    
    function UpdateClient()
    local Fps = workspace:GetRealPhysicsFPS()
    Client:Set("Fps : "..Fps)
    end
    
    spawn(function()
    while true do wait(.1)
    UpdateClient()
    end
    end)
    
    Client1 = Welcome:AddLabel("Client")
    
    function UpdateClient1()
    local Ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
    Client1:Set("Ping : "..Ping)
    end
    
    spawn(function()
    while true do wait(.1)
    UpdateClient1()
    end
    end)
    
    local Thanksforreport = Welcome:AddLabel("Report Bug")

    local ReportBugs = nil
    Welcome:AddTextbox({
	Name = "Text Report Bug",
	Default = "Here",
	TextDisappear = false,
	Callback = function(value)
	ReportBugstext = value
	end	  
})
    
   
    local url = "https://discord.com/api/webhooks/1157214783897096202/wp7MmLOgCDCacfmm8R90V3t0EiWpCKZc5RkD67ZlasLg0xfS4QB6aqnANXzSAMXT1e72"
    Welcome:AddButton({
	Name = "Enter",
	Callback = function()
       Thanksforreport:Set("Thank You For Reported Bugs")
        wait(5)
        Thanksforreport:Set("Report Bug")
    local data = {
        ["username"] = 'Perfectus',
        ['content'] = '',
        ["avatar_url"] = "",
        ["embeds"] = {
            {
                ["description"] = "**Bug Reporting Webhook**",
                ["color"] = tonumber(255), -- color id		
                ["type"] = "rich",
                ["fields"] =  {
                    {
                        ["name"] = "Hwid",
                        ["value"] = '```lua'..'\n'..game:GetService("RbxAnalyticsService"):GetClientId()..'\n```',
                    },
                    {
                        ["name"] = "Username",
                        ["value"] = '```lua'..'\n'..game.Players.LocalPlayer.Name..'\n```',
                        ["inline"] = true
                    },
                    {
                        ["name"] = "Display Name",
                        ["value"] = '```lua'..'\n'..game.Players.LocalPlayer.DisplayName..'\n```',
                        ["inline"] = true
                    },
                    {
                        ["name"] = "Reported Bug",
                        ["value"] = '```lua'..'\n'..ReportBugstext..'\n```',
                        ["inline"] = false
                    }
                },
                ["footer"] = {
                    ["text"] = "Reported Bug",
                },
                ["timestamp"] = DateTime.now():ToIsoDate(),
            }
        },
    }
    local newdata = game:GetService("HttpService"):JSONEncode(data)
    local headers = {["content-type"] = "application/json"}
    request = http_request or request or HttpPost or syn.request
    local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
    request(abcdef)
    
    end,
})



Farming:AddSection({
    Name = "Current World"
})

local Label1 = Farming:AddLabel(crwl.Value)

function UpdateTime()
    Label1:Set(crwl.Value)
    end
    
    spawn(function()
    while task.wait() do
    pcall(function()
    UpdateTime()
    end)
    end
    end)

Farming:AddSection({
    Name = " Auto Farm"
})

local world ={}
for _,v in pairs(game.workspace.Map.Worlds:GetChildren()) do
    table.insert(world,v.Name)
end

local selectedworld
local Dropdown2 = Farming:AddDropdown({
	Name = "Select to World",
	Options = world,
	Callback = function(Option)
        selectedworld = Option
	end,
})

local enemy = {}
for i, v in pairs(game.workspace.Map.Worlds:GetDescendants()) do
    if v:IsA "Folder" and v.Parent.Name == "Levels" then
		if not table.find(enemy, tostring(v)) then
			table.insert(enemy, tostring(v))
		end
    end
end


local selectedenemy
local Dropdown = Farming:AddDropdown({
	Name = "Select to Enemy",
	Options = enemy,
	Callback = function(Option)
        selectedenemy = Option
	end,
})


local selectenemy
Farming:AddToggle({
	Name = "Fight Selected Enemy",
    Default = false,
    Save = true,
	Callback = function(Value)
		selectenemy = Value
        if Value then
            spawn(function()
                selectenemy_func()
            end)
          end
	end,
})

local howmuchs
Farming:AddSlider({
    Name = "Auto Fight Delay /s",
    Min = 0,
    Max = 12,
    Default = 1,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "/s",
    Callback = function(dly1)
    howmuchs = dly1
    end  
})

local crrentworld = player.GameStats.CurrentWorld

Farming:AddButton({
	Name = "Tp Enemy",
	Callback = function(Value)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.workspace.Map.Worlds[selectedworld].Levels[selectedenemy].Spawner.CFrame * CFrame.new(0,0,5)
	end,
})



function selectenemy_func()
    spawn(function()
        while wait(howmuchs) and selectenemy do
            function getNil(name,class) for _,v in pairs(getnilinstances())do if v.ClassName==class and v.Name==name then return v;end end end

            local args = {
                [1] = workspace.Map.Worlds[selectedworld].Levels[selectedenemy].Spawner,
                [2] = 5.373063564300537,
                [3] = "Simulate",
            }
            
            game:GetService("ReplicatedStorage").Remotes.Push:FireServer(unpack(args))
             
        end
    end)
end



Main:AddSection({
    Name = "Features"
})
Main:AddToggle({
    Name = "Auto Power",
    Default = false,
    Save = true,
    Flag = "AUTO CLICK",
    Callback = function(v)
    a = v
    while a do wait()
            game:GetService("ReplicatedStorage").Remotes.PowerGain:FireServer()
            game:GetService("ReplicatedStorage").Remotes.PowerGainAuto:FireServer()
        end
    end
})

Main:AddToggle({
    Name = "Auto Push",
    Default = false,
    Save = true,
    Flag = "AUTO Collect",
    Callback = function(v)
    b = v
    while b do wait()
        game:GetService("ReplicatedStorage").Remotes.PushGain:FireServer()
    end
    end
})

Main:AddSection({
    Name = "Dumbell"
})

local dumbelbilgi = game.ReplicatedStorage.Assets.Dumbells

local dumbelf = {}
for _,v in pairs(dumbelbilgi:GetChildren()) do
    table.insert(dumbelf,v.Name)
end


    Main:AddDropdown({
	Name = "Check it Dumbell Numeral",
	Options = dumbelf,
	Callback = function(Option)

	end,
})

local dumbelnumeral
    Main:AddTextbox({
	Name = "Enter Dumbell Numeral (example:kg, KT, Qd, Qn)",
	Default = "Enter",
	TextDisappear = true,
	Callback = function(Text2)
    dumbelnumeral = Text2
	end	  
})



Main:AddToggle({
    Name = "Auto Equip Best Dumbell (Req:Dumbell Numeral)",
    Default = false,
    Callback = function(bool)
getgenv().AutoSaveSettings.AutoBestDumbell = bool 
    while task.wait() do 
        if getgenv().AutoSaveSettings.AutoBestDumbell == true then 
            for i = 1, 15000 do
                local args = {
                   [1] = "Equip",
                   [2] = i .. dumbelnumeral
                }
            game:GetService("ReplicatedStorage").Remotes.DumbellEquip:FireServer(unpack(args))
            end
        else
        wait()
    break
  end 
end 
    end
})
Main:AddButton({
    Name = "Disable Notification",
    Callback = function()
game.Players.LocalPlayer.PlayerGui.UI.Notification.Visible = false
    end
})
Main:AddSection({		
    Name = "Rebirth"
})


Main:AddToggle({
    Name = "Auto Rebirth",
    Default = false,
    Callback = function(Value)
        reb = Value
        while reb do task.wait(0.5)
game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer()
    end
    end
})    

Main:AddSection({		
    Name = "UGC"
})


Main:AddToggle({
    Name = "Auto Claim UGC",
    Default = false,
    Callback = function(Value)
        ugc = Value
        while ugc do task.wait(0.5)
local args = {[1] = 1}game:GetService("ReplicatedStorage").Remotes.ClaimUGC:FireServer()
local args = {[1] = 1}game:GetService("ReplicatedStorage").Remotes.ClaimUGC:FireServer()
    
        end
    end
})   

Main:AddSection({
    Name = "PlayTime"
})
Main:AddToggle({
	Name = "Auto Claim PlayTime",
	Default = false,
	Callback = function(Value)
        pl = Value
            while pl do task.wait(0.5)
    game:GetService("ReplicatedStorage").Remotes.PlaytimeRewards:FireServer("Gift_1")
    game:GetService("ReplicatedStorage").Remotes.PlaytimeRewards:FireServer("Gift_2")
    game:GetService("ReplicatedStorage").Remotes.PlaytimeRewards:FireServer("Gift_3")
    game:GetService("ReplicatedStorage").Remotes.PlaytimeRewards:FireServer("Gift_4")
    game:GetService("ReplicatedStorage").Remotes.PlaytimeRewards:FireServer("Gift_5")
    game:GetService("ReplicatedStorage").Remotes.PlaytimeRewards:FireServer("Gift_6")        
    game:GetService("ReplicatedStorage").Remotes.PlaytimeRewards:FireServer("Gift_7")
    game:GetService("ReplicatedStorage").Remotes.PlaytimeRewards:FireServer("Gift_8")
    game:GetService("ReplicatedStorage").Remotes.PlaytimeRewards:FireServer("Gift_9")
		end
	end,
})



Main:AddSection({
    Name = "Spin"
})
Main:AddToggle({
	Name = "Auto Spin",
	Default = false,
	Callback = function(Value)
	DDa = Value
   while DDa do wait()
   game:GetService("ReplicatedStorage").Remotes.Spins:FireServer()
          end
	end,
})



local eqbest = game.Players.LocalPlayer.PlayerGui.UI.Pages.Pets.Main.Equip_best
local mergep = game.Players.LocalPlayer.PlayerGui.UI.Pages.Pets.Main.Main

local hatch = Window:MakeTab({
    Name = "Open Egg",
    Icon = openimg,
    PremiumOnly = false
 })
hatch:AddSection({
    Name = "Pet"
})

 hatch:AddToggle({
	Name = "Auto Equip Best Pet",
    Default = false,
    Save = true,
	Callback = function(Value)
		bestpet = Value
        while bestpet do wait(1)
            firesignal(eqbest.MouseButton1Click)
          end
	end,
})
hatch:AddSection({
    Name = "Other Open"
})
 hatch:AddToggle({
	Name = "Auto Hatch 30M Egg",
    Default = false,
    Save = true,
	Callback = function(Value)
		o30megg = Value
        while o30megg do wait()
            local args = {                
                [1] = "Hatch1",
                [2] = "30M",
                [3] = {
                },
            }
            game:GetService("ReplicatedStorage").Remotes.Hatch:FireServer(unpack(args))     
          end
	end,
})
hatch:AddToggle({
	Name = "Auto Hatch Hour Egg",
	Default = false,
	Callback = function(Value)
	DD = Value
   while DD do wait()
   game:GetService("ReplicatedStorage").Remotes.HourEgg:FireServer()
          end
	end,
})
local eggs ={}
for _,v in pairs(game.workspace.Map.Eggs:GetChildren()) do
    table.insert(eggs,v.Name)
end
hatch:AddSection({
    Name = "Main Open"
})
local eggtoopen
hatch:AddDropdown({
	Name = "Select to Egg",
	Options = eggs,
	Callback = function(Option)
        eggtoopen = Option
	end,
})


local openegg
hatch:AddToggle({
	Name = "Open Egg",
    Default = false,
    Save = true,
	Callback = function(Value)
		openegg = Value
        if Value then
            spawn(function()
                openegg_func()
            end)
          end
	end,
})

local howmuch
    hatch:AddSlider({
    Name = "How many opens?",
    Min = 0,
    Max = 12,
    Default = 1,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "/s",
    Callback = function(dly1)
    howmuch = dly1
    end  
})

hatch:AddButton({
	Name = "Tp Egg",
	Callback = function(Value)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Workspace.Map.Eggs[eggtoopen]["Neon"].CFrame * CFrame.new(0,0,5)
	end,
})

local ht = "Hatch"

function openegg_func()
    spawn(function()
        while wait(0.1) and openegg do
            local args = {
                [1] = ht .. howmuch,
                [2] = eggtoopen,
                [3] = {
                },
            }
            game:GetService("ReplicatedStorage").Remotes.Hatch:FireServer(unpack(args))     
        end
    end)
end

local p = game.Players.LocalPlayer.PlayerGui.UI.Pages

local ggui = Window:MakeTab({
    Name = "GUI",
    Icon = guiimg,
    PremiumOnly = false
 }) 

local gui = {}
for _,v in pairs(p:GetChildren()) do
    table.insert(gui,v.Name)
end

local openthegui
ggui:AddDropdown({
	Name = "Select to Gui",
	Options = gui,
	Callback = function(Option)
        openthegui = Option
	end,
})

ggui:AddToggle({
	Name = "Open Selected Gui",
    Default = false,
	Callback = function(Value)
		opengui = Value
        if Value then
            spawn(function()
                opengui_func()
            end)
        end
	end,
})

ggui:AddToggle({
	Name = "Close Selected Gui",
    Default = false,
	Callback = function(Value)
		opengui2 = Value
        if Value then
            spawn(function()
                opengui_func2()
            end)
        end
	end,
})

function opengui_func()
    spawn(function()
    p[openthegui].Open.Value = true
    end)
end

function opengui_func2()
    spawn(function()
        p[openthegui].Open.Value = false
    end)
end


local Player = Window:MakeTab({
    Name = "Local Player",
    Icon = universalimg,
    PremiumOnly = false
})
Player:AddParagraph("Local Player ","Speed ")
Player:AddSlider({
    Name = "Walkspeed",
    Min = 0,
    Max = 500,
    Default = 50,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "Speeds",
    Callback = function(s)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s

    end  
})
Player:AddSlider({
    Name = "JumpPower",
    Min = 0,
    Max = 500,
    Default = false,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "Powers",
    Callback = function(s)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = s
    end  
})
local misc = Window:MakeTab({
    Name = "Misc",
    Icon = settingimg,
    PremiumOnly = false
 })
misc:AddSection({
    Name = "Server Misc"
})
misc:AddParagraph("Anti Afk NOTIFICATION"," Script Will Auto anti afk when you excute  !")
 function antiAFK()
    player.Idled:Connect(function()
        VU:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
        task.wait(1)
        VU:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    end)
end
    antiAFK()
function CopyjobID()
    local JobId = game.JobId

    setclipboard(JobId)
end
local whitescreen = false
misc:AddToggle({
    Name = "White Screen ",
    Default = false,
    Callback = function (tooglestate)
        whitescreen = tooglestate
if whitescreen == true then
        game:GetService("RunService"):Set3dRenderingEnabled(false)
        elseif whitescreen == false  then
            game:GetService("RunService"):Set3dRenderingEnabled(true)

    end
end

})

misc:AddButton({
    Name = "Hop Sever ",
    Default = false,
    Callback = function()
        local Player = game.Players.LocalPlayer    
        local Http = game:GetService("HttpService")
        local TPS = game:GetService("TeleportService")
        local Api = "https://games.roblox.com/v1/games/"

        local _place,_id = game.PlaceId, game.JobId
        local _servers = Api.._place.."/servers/Public?sortOrder=Asc&limit=10"
        function ListServers(cursor)
           local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
           return Http:JSONDecode(Raw)
        end

        time_to_wait = 3 
        while wait(time_to_wait) do
           Player.Character.HumanoidRootPart.Anchored = true
           local Servers = ListServers()
           local Server = Servers.data[math.random(1,#Servers.data)]
           TPS:TeleportToPlaceInstance(_place, Server.id, Player)
        end
            perfectushub:MakeNotification({
                Name = "success Copy",
                Content = "Copy Your JobID",
                Image = "rbxassetid://14887567417",
                Time = 5
            })
   end
})
misc:AddButton({
    Name = "Copy JobID Sever",
    Default = false,
    Callback = function()
            CopyjobID()
            perfectushub:MakeNotification({
                Name = "success Copy",
                Content = "Copy Your JobID",
                Image = "rbxassetid://14887567417",
                Time = 5
            })
   end
})
misc:AddTextbox({
    Name = "Type Your JobID And Enter",
    Default = false,
    TextDisappear = true,
    Callback = function(vew)
        Players = game:GetService("Players")

        PlaceId, JobId = game.PlaceId, vew  
TeleportService = game:GetService("TeleportService")
TeleportService:TeleportToPlaceInstance(PlaceId, JobId, Players.LocalPlayer)
    end	  
})

 misc:AddSection({
    Name = "Save + Load Config"
})


    misc:AddButton({
    Name = "Save ConFig !",
    Callback = function()
     perfectushub:SaveCfg("perfectushub")
            perfectushub:MakeNotification({
                Name = "Success Save ConFig",
                Content = "If you want use this config just load it",
                Image = "rbxassetid://14887567417",
                Time = 5
            })
      end    
})
misc:AddButton({
    Name = "Load ConFig !",
    Callback = function()
        perfectushub:Init()
      end    
})
local dc = Window:MakeTab({
    Name = "Discord",
    Icon = discordimg,
    PremiumOnly = false
 })
	dc:AddParagraph("Click To Copy Link Discord", "Perfectus Hub")
	dc:AddButton({
		Name = "Copy Discord Link",
		Callback = function()
			local serverLink = "https://discord.gg/RVnjYRWNA9" -- Thay xxxxxxxxxx bằng mã link server Discord của bạn
			setclipboard(serverLink) 
			local success = true
			if success then
				perfectushub:MakeNotification({
					Name = "Copy To clipboard",
					Content = "Let Join DISCORD SEVER ( Perfectus Hub | COMMUNITY )",
					Image = "rbxassetid://14887567417",
					Time = 5
				})
			end
		end
	})   

local Tabss = Window:MakeTab({
    Name = "Updates",
    Icon = perfectuslogo,
    PremiumOnly = false
 })

Tabss:AddSection({
    Name = "Perfectus Hub Updates"
})

Tabss:AddParagraph("Update 1", "New UI, Added Auto Fight System, Added Auto Egg System, Added Welcome Tab and Stats, Added Gui Open and more...")



client.Gamepasses.FastPush.Value = true
client.Gamepasses.VIP.Value = true
client.GameStats.InGroup = true
client.GameStats.SkipAll = true
client.GameStats.Verified = true

perfectushub:Init()


wait(1)

game:GetService("StarterGui"):SetCore("SendNotification",{
	Title = "Perfectus Hub", -- Required
	Text = "Loaded", -- Required
	Icon = "rbxassetid://14887567417" -- Optional
})
